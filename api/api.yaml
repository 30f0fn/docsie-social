---
openapi: 3.0.0
info:
  title: Docsi-Social API
  description: 
  version: 0.1.0
servers:
  - url: # http://api.example.com/v1
    description: # Optional server description, e.g. Main (production) server
  - url: # http://staging-api.example.com
    description: # Optional server description, e.g. Internal staging server for testing
paths:
  /api/:
    get:
      summary: portal view
      description: 
      parameters:
        - in: query
          name: pageNumber
          required: false
          schema:
            type: integer
          description: page number of a paginated list component
      responses:
        '200':    # status code
          description:
          content:
            application/json:
              schema: 
                type: object
                properties:
                  recommended_docs:
                      type: object
                      properties:
                        weekly_top_commented: 
                          $ref: '#/components/schemas/DocMini'
                        daily_top_commented: 
                          $ref: '#/components/schemas/DocMini'
                        most_discussed: 
                          $ref: '#/components/schemas/DocMini'
                        most_active: 
                          $ref: '#/components/schemas/DocMini'
                  recommended_topics:
                    type: array
                    minItems: 3
                    maxItems: 3
                    items:
                      type: object
                      properties:
                        topic:
                          $ref: '#/components/schemas/Topic'
                        docs:
                          type: array
                          items:
                            $ref: '#/components/schemas/DocMini'
                  popular_topics: 
                    type: array
                    minItems: 3
                    maxItems: 3
                    items:
                      $ref: '#/components/schemas/Topic'
                  trending_communities: 
                    type: array
                    minItems: 3
                    maxItems: 3
                    items:
                      $ref: '#/components/schemas/Community'
                  active_communities: 
                    type: array
                    minItems: 3
                    maxItems: 3
                    items:
                      $ref: '#/components/schemas/Community'
  /api/docs/{docId}:
    get:
      summary: doc view
      description: view an article
      parameters:
        - in: path
          name: docId
          required: true
          schema:
            type: integer
          description: the document ID
      responses:
        '200':
          description:
          content:
            application/json:
              schema:
                type: object
                properties:
                  document:
                    $ref:
                      '#/components/schemas/Document'
                  similar_documents:
                    type: array
                    minItems: 3
                    maxItems: 3
                    items:
                      $ref: '#/components/schemas/DocMini'
                  topics:
                    type: array
                    minItems: 3
                    maxItems: 3
                    items:
                      $ref: '#/components/schemas/Topic'
  /api/search:
    get:
      summary: search view
      description: show search results
      parameters:
        - in: query
          name: pageNumber
          required: false
          schema:
            type: integer
          description: page number of a paginated list component
      responses:
        '200':    # status code
          description:
          content:
            application/json:
              schema: 
                type: object
                properties:
                  searched_term:
                    type: string
                  recommended_communities:
                    type: array
                    minItems: 3
                    maxItems: 3
                    items:
                      $ref: '#/components/schemas/Community'
                  matched_docs:
                    type: array
                    minItems: 0
                    maxItems: 10
                    items:
                      $ref: '#/components/schemas/DocMini'
                  # active_refinements:
                  #   type: array
                  #   items:
                  #     $ref: '#/components/schemas/SearchRefinement'
  /api/topics:
    get:
      summary: topics list view
      description: 
      responses:
        '200':    # status code
          description:
          content:
            application/json:
              schema: 
                type: object
                properties:
                  popular_topics:
                    type: array
                    minItems: 3
                    maxItems: 3
                    items:
                      $ref: '#/components/schemas/Topic'
                  recommended_topics: 
                    type: array
                    minItems: 3
                    maxItems: 3
                    items:
                      $ref: '#/components/schemas/Topic'
                  all_topics:
                    $ref: '#/components/schemas/AllTopics'
  /api/topics/{topicSlug}:
    get:
      summary: topic detail view
      description: detail view for matched topic
      parameters:
        - in: path
          name: topicSlug
          required: true
          schema:
            type: string
          description: the topic slug
        - in: query
          name: pageNumber
          required: false
          schema:
            type: integer
          description: page number of a paginated list component
      responses:
        '200':    # status code
          description:
          content:
            application/json:
              schema: 
                type: object
                properties:
                  detailed_topic:
                    $ref: '#/components/schemas/Topic'
                  connected_topics: 
                    minItems: 3
                    maxItems: 3
                    type: array
                    items:
                      $ref: '#/components/schemas/Topic'
                  top_docs: 
                    type: array
                    minItems: 10
                    maxItems: 10
                    items:
                      $ref: '#/components/schemas/DocMini'
                  trending_communities: 
                    type: array
                    minItems: 3
                    maxItems: 3
                    items:
                      $ref: '#/components/schemas/Community'
                  active_communities: 
                    type: array
                    minItems: 3
                    maxItems: 3
                    items:
                      $ref: '#/components/schemas/Community'
  /api/communities:
    get:
      summary: community list view
      description: 
      responses:
        '200':    # status code
          description:
          content:
            application/json:
              schema: 
                type: object
                properties:
                  popular_communities:
                    type: array
                    minItems: 3
                    maxItems: 3
                    items:
                      $ref: '#/components/schemas/Community'
                  recommended_communities: 
                    type: array
                    minItems: 3
                    maxItems: 3
                    items:
                      $ref: '#/components/schemas/Community'
                  all_communities:
                    $ref: '#/components/schemas/AllCommunities'
  /api/communities/{communitySlug}:
    get:
      summary: community detail view
      description: detail view for matched community
      summary: topic detail view
      description: detail view for matched topic
      parameters:
        - in: path
          name: communitySlug
          required: true
          schema:
            type: string
          description: the topic slug
        - in: query
          name: pageNumber
          required: false
          schema:
            type: integer
          description: page number of a paginated list component
      responses:
        '200':    # status code
          description:
          content:
            application/json:
              schema: 
                type: object
                properties:
                  detailed_community:
                    $ref: '#/components/schemas/Community'
                  connected_communities: 
                    type: array
                    minItems: 3
                    maxItems: 3
                    items:
                      $ref: '#/components/schemas/Community'
                  top_docs: 
                    type: array
                    minItems: 10
                    maxItems: 10
                    items:
                      $ref: '#/components/schemas/DocMini'
                  trending_topics: 
                    type: array
                    minItems: 3
                    maxItems: 3
                    items:
                      $ref: '#/components/schemas/Topic'
                  community_topics: 
                    type: array
                    minItems: 3
                    maxItems: 3
                    items:
                      $ref: '#/components/schemas/Topic'



##############################
# references resolved below! #
##############################

components:
  schemas:
    Document:
      type: object
      properties:
        title:
          type: string
        slug:
          type: string
        id:
          type: integer
        author:
          $ref: '#/components/schemas/Author'
        content:
          type: string
          minLength: 2000
        topics:
          type: array
          minItems: 3
          maxItems: 3
          items:
            $ref: '#/components/schemas/Topic'
      example:
        title: An Introduction to Version Control Using GitHub Desktop
        slug: An Introduction to Version Control Using GitHub Desktop
        id: 1
        author: Daniel van Strien
        content: The Programming Historian editors do their best to maintain lessons as minor issues inevitably arise. However, since publication, changes to either the underlying technologies or principles used by this lesson have been substantial, to the point where the editors have decided not to further update it. The lesson may still prove a useful learning tool and a snapshot into the techniques of digital history when it was published, but we cannot guarantee all elements will continue to work as intended.
        topics: Github
    Author:
      type:
        object
      properties:
        name:
          type: string
      example:
        name: Daniel van Strien
    Topic:
      type: object
      properties:
        name:
          type: string
        slug:
          type: string
        description:
          type: string
          minLength: 100
      example:
        name: Javascript
        slug: javascript
        description: JavaScript (not to be confused with Java) is a high-level, dynamic, multi-paradigm, object-oriented, prototype-based, weakly-typed, and interpreted language used for both client-side and server-side scripting. Its primary use is in the rendering and manipulation of web pages.
    Community:
      type: object
      properties:
        name:
          type: string
        slug:
          type: string
        description:
          type: string
          minLength: 100
      example:
        name: Open Source Maintainers
        slug: Open Source Maintainers
        description: It brings in maintainers from all over the GitHub community to discuss and talk about anything.
    AllTopics:
      type: array
      items:
        $ref: '#/components/schemas/Topic'
      minItems: 20
    AllCommunities:
      type: array
      items:
        $ref: '#/components/schemas/Community'
      minItems: 20
    DocMini:
      properties:
        id:
          type: integer
        title:
          type: string
          minLength: 5
        excerpt:
          type:
            string
          minLength: 100
      example:
        id: 1
        title: 33 Concepts Every JavaScript Developer Should Know
        excerpt: leonardomso
    SearchRefinement:
      oneOf:
        - $ref '#/components/Schemas/DateSearchRefinement'
        - $ref '#/components/Schemas/CommunitySearchRefinement'
        - $ref '#/components/Schemas/TopicSearchRefinement'
    DateSearchRefinement:
      type: object
      properties:
        from:
          type: string
          format: date
        to:
          type: string
          format: date
    CommunitySearchRefinement:
      type: object
      properties:
        communityName:
          type: string
    TopicSearchRefinement:
      type: object
      properties:
        topicName:
          type: string
          
